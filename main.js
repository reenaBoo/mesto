(()=>{"use strict";function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var e=function(){function e(t,n,r,o,i,a){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),this._text=t.name,this._image=t.link,this._cardSelector=n,this.likes=t.likes,this.cardId=t._id,this._ownerId=t.owner._id,this._handleCardClick=r,this._userId=a,this._handleCardLike=o.bind(this),this._handleCardDelete=i}var n,r;return n=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".card__image"),this._cardTitle=this._element.querySelector(".card__title"),this._cardButtonDelete=this._element.querySelector(".card__delete-button"),this._cardButtonLike=this._element.querySelector(".card__like-button"),this._likeCounter=this._element.querySelector(".card__like-counter"),this._setEventListeners(),this._checkCardOwner(),this._cardImage.src=this._image,this._cardImage.alt=this._text,this._cardTitle.textContent=this._text,this.handleToggleLike(),this.setCounter(this.likes.length),this._element}},{key:"_checkCardOwner",value:function(){this._ownerId!==this._userId&&this._cardButtonDelete.remove()}},{key:"setCounter",value:function(t){this._likeCounter.textContent=t}},{key:"_setEventListeners",value:function(){var t=this;this._cardButtonLike.addEventListener("click",(function(){t._handleCardLike(t)})),this._cardButtonDelete.addEventListener("click",(function(){t._handleCardDelete(t)})),this._cardImage.addEventListener("click",(function(){t._handleCardClick()}))}},{key:"handleToggleLike",value:function(){this.isLiked()?this._cardButtonLike.classList.add("card__like-button_active"):this._cardButtonLike.classList.remove("card__like-button_active")}},{key:"removeElement",value:function(){this._element.remove()}},{key:"isLiked",value:function(){var t=this;return this.likes.some((function(e){return e._id===t._userId}))}}])&&t(n.prototype,r),e}();function n(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var r=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._inputSelector=e.inputSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=n,this._submitButton=this._form.querySelector(e.submitButtonSelector),this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector))}var e,r;return e=t,(r=[{key:"_showInputError",value:function(t){var e=this._form.querySelector(".".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){var e=this._form.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.classList.remove(this._errorClass),e.textContent=""}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.setAttribute("disabled","true")):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.removeAttribute("disabled"))}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_setEventListener",value:function(){var t=this;this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListener()}},{key:"resetValidation",value:function(){var t=this;this._inputList.forEach((function(e){t._hideInputError(e)})),this._toggleButtonState()}}])&&n(e.prototype,r),t}();function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var i=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=e,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderItems",value:function(t){var e=this;t.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"addItemAppend",value:function(t){this._container.append(t)}}])&&o(e.prototype,n),t}();function a(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var u=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),function(t,e,n){e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n}(this,"_handleEscClose",(function(t){"Escape"===t.key&&n.close()})),this._popup=document.querySelector(e)}var e,n;return e=t,(n=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_opened")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_opened")}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("mousedown",(function(e){e.target.classList.contains("popup")&&t.close()})),this._popup.addEventListener("click",(function(e){e.target.classList.contains("popup__close-button")&&t.close()}))}}])&&a(e.prototype,n),t}();function c(t){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function l(t,e,n){return(l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=p(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function f(t,e){return(f=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function h(t,e){return!e||"object"!==c(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function p(t){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var _=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&f(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=p(r);if(o){var n=p(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return h(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._popupImage=e._popup.querySelector(".figure__image"),e._popupTitle=e._popup.querySelector(".figure__title"),e}return e=a,(n=[{key:"openImage",value:function(t,e){this._popupImage.src=e,this._popupImage.alt=t,this._popupTitle.textContent=t,l(p(a.prototype),"open",this).call(this)}}])&&s(e.prototype,n),a}(u);function d(t){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function y(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function v(t,e,n){return(v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=g(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function m(t,e){return(m=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function b(t,e){return!e||"object"!==d(e)&&"function"!=typeof e?k(t):e}function k(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function g(t){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var w=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&m(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=g(r);if(o){var n=g(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return b(this,t)});function a(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),function(t,e,n){e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n}(k(n=i.call(this,t)),"changeButtonText",(function(t){n._confirmButton.textContent=t})),n._form=n._popup.querySelector(".form"),n._confirmButton=n._form.querySelector(".form__save-button"),n._handleSubmit=e,n}return e=a,(n=[{key:"_getInputValues",value:function(){var t=this;return this._inputsList=this._form.querySelectorAll(".form__input"),this._data={},this._inputsList.forEach((function(e){t._data[e.name]=e.value})),this._data}},{key:"setEventListeners",value:function(){var t=this;v(g(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault();var n=t._getInputValues();t._handleSubmit(n)}))}},{key:"close",value:function(){this._form.reset(),v(g(a.prototype),"close",this).call(this)}}])&&y(e.prototype,n),a}(u);function S(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var C=function(){function t(e,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userName=e,this._userAbout=n,this._userAvatar=r,this._profileId=""}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,about:this._userAbout.textContent}}},{key:"setUserInfo",value:function(t,e,n){this._userName.textContent=t,this._userAbout.textContent=e,this._userId=n}},{key:"setUserAvatar",value:function(t){this._userAvatar.src=t}},{key:"getUserId",value:function(){return this._userId}}])&&S(e.prototype,n),t}();function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var L=function(){function t(e,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._cohort=e,this._url=n,this._token=r}var e,n;return e=t,(n=[{key:"_checkStatus",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._url,"/").concat(this._cohort,"/cards"),{headers:{authorization:this._token}}).then(this._checkStatus)}},{key:"postNewCard",value:function(t,e){return fetch("".concat(this._url,"/").concat(this._cohort,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:e})}).then(this._checkStatus)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"/").concat(this._cohort,"/users/me"),{headers:{authorization:this._token}}).then(this._checkStatus)}},{key:"editUserInfo",value:function(t,e){return fetch("".concat(this._url,"/").concat(this._cohort,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:t,about:e})}).then(this._checkStatus)}},{key:"editUserAvatar",value:function(t){return fetch("".concat(this._url,"/").concat(this._cohort,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then(this._checkStatus)}},{key:"likeCard",value:function(t){return fetch("".concat(this._url,"/").concat(this._cohort,"/cards/likes/").concat(t),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this._checkStatus)}},{key:"deleteLike",value:function(t){return fetch("".concat(this._url,"/").concat(this._cohort,"/cards/likes/").concat(t),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this._checkStatus)}},{key:"deleteCard",value:function(t){return fetch("".concat(this._url,"/").concat(this._cohort,"/cards/").concat(t),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this._checkStatus)}}])&&E(e.prototype,n),t}();function O(t){return(O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function I(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function j(t,e,n){return(j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=B(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function T(t,e){return(T=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function P(t,e){return!e||"object"!==O(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function B(t){return(B=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var q=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&T(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=B(r);if(o){var n=B(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return P(this,t)});function a(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._form=n._popup.querySelector(".form"),n._handleSubmit=e,n}return e=a,(n=[{key:"setEventListeners",value:function(){var t=this;j(B(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._handleSubmit(t.card)}))}},{key:"open",value:function(t){j(B(a.prototype),"open",this).call(this),this.card=t}}])&&I(e.prototype,n),a}(u),x={inputSelector:".form__input",submitButtonSelector:".form__save-button",inactiveButtonClass:"form__save-button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},R=document.querySelector(".profile__name"),A=document.querySelector(".profile__description"),U=document.querySelector(".profile__avatar"),D=document.querySelector(".form_type_user"),V=document.querySelector(".form_type_card"),N=document.querySelector(".form_type_avatar"),z=document.querySelector(".profile__edit-button"),J=document.querySelector(".profile__add-button"),H=document.querySelector(".profile__avatar-overlay");function M(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var $=new L("cohort-26","https://nomoreparties.co/v1/","254abe0c-6cde-4d88-b5b9-683b939cbbc8"),F=new _(".popup_type_image");F.setEventListeners();var G=new C(R,A,U);function K(t){G.setUserInfo(t.name,t.about,t._id)}function Q(t){G.setUserAvatar(t.avatar)}function W(t){var e=this;(t.isLiked()?$.deleteLike(t.cardId):$.likeCard(t.cardId)).then((function(t){e.likes=t.likes,e.handleToggleLike(),e.setCounter(t.likes.length)})).catch((function(t){return console.log(t)}))}function X(t){Y.open(t)}var Y=new q(".popup_type_delete",(function(t){$.deleteCard(t.cardId).then((function(e){"Пост удалён"===e.message&&(t.removeElement(),Y.close())})).catch((function(t){return console.log(t)}))}));Y.setEventListeners();var Z=function(t){return function(t){var n=G.getUserId();return new e(t,".template-card",(function(){F.openImage(t.name,t.link)}),W,X,n)}(t).generateCard()},tt=new i((function(t){tt.addItemAppend(Z(t))}),".cards");Promise.all([$.getUserInfo(),$.getInitialCards()]).then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){u=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(e,n)||function(t,e){if(t){if("string"==typeof t)return M(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?M(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];K(o),Q(o),tt.renderItems(i);var a=new w(".popup_type_new-card",(function(t){a.changeButtonText("Создание..."),$.postNewCard(t.name,t.link).then((function(t){tt.addItem(Z(t)),a.close(),a.changeButtonText("Создать")})).catch((function(t){return console.log(t)}))}));a.setEventListeners();var u=new w(".popup_type_edit",(function(t){u.changeButtonText("Сохранение..."),$.editUserInfo(t.name,t.about).then((function(){K(t),u.close(),u.changeButtonText("Сохранить")})).catch((function(t){return console.log(t)}))}));u.setEventListeners();var c=new w(".popup_type_avatar",(function(t){c.changeButtonText("Сохранение..."),$.editUserAvatar(t.avatar).then((function(){Q(t),c.close(),c.changeButtonText("Сохранить")})).catch((function(t){return console.log(t)}))}));c.setEventListeners(),z.addEventListener("click",(function(){var t=G.getUserInfo();D.name.value=t.name,D.about.value=t.about,et.resetValidation(),u.open()})),J.addEventListener("click",(function(){nt.resetValidation(),a.open()})),H.addEventListener("click",(function(){rt.resetValidation(),c.open()}))})).catch((function(t){console.log(t)}));var et=new r(x,D),nt=new r(x,V),rt=new r(x,N);et.enableValidation(),nt.enableValidation(),rt.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,